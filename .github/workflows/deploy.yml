# Yes it was vibecoded but had you know with such vibe!
name: Deploy to GitHub Pages

on:
  workflow_dispatch: {}

env:
  VERSIONING_FILE_PATH: "unity-version.txt"
  BUILD_OUTPUT_PATH: build
  RELEASE_NAME: AutoBattler

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  unity_build:
    name: Web Build and deployment
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
        - targetPlatform: StandaloneWindows64
        - targetPlatform: StandaloneLinux64
        - targetPlatform: WebGL

    outputs:
      unityVersion: ${{ steps.version_output.outputs.unityVersion }}
      buildArtifact: ${{ steps.artifact_output.outputs.buildArtifactName }}

    steps:
      # ... (your existing build steps remain the same)
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Get Unity Version
        uses: Appegy/unity-version-action@v1

      - name: Setting Artifact name env variable
        run: echo "BUILD_ARTIFACT_NAME=${{ env.RELEASE_NAME }}-${{ matrix.targetPlatform }}" >> $GITHUB_ENV
        
      - name: Set job outputs
        id: artifact_output
        run: echo "::set-output name=buildArtifactName::${{ env.BUILD_ARTIFACT_NAME }}"

      - name: Building game
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          buildsPath: ${{ env.BUILD_OUTPUT_PATH}}
          buildName: ${{ env.BUILD_NAME}}
          unityVersion: ${{ env.UNITY_VERSION }}
          targetPlatform: ${{ matrix.targetPlatform }}
      - name: Remove BurstDebugInformation folders
        run: |
        echo "Removing BurstDebugInformation folders..."
        TARGET_DIR="${{ env.BUILD_OUTPUT_PATH }}/${{ matrix.targetPlatform }}/${{ env.RELEASE_NAME }}_BurstDebugInformation_DoNotShip"
        if [ -d "$TARGET_DIR" ]; then
            echo "Found folder: $TARGET_DIR"
            echo "Attempting to unlock and remove it..."
            # Remove immutability if on Linux
            if command -v chattr &>/dev/null; then
              sudo chattr -R -i "$TARGET_DIR" 2>/dev/null || true
            fi
            # Relax permissions and delete
            sudo chmod -R u+w "$TARGET_DIR" 2>/dev/null || true
            sudo rm -rf "$TARGET_DIR" 2>/dev/null || true
            echo "Successfully removed: $TARGET_DIR"
        else
            echo "No BurstDebugInformation folder found - skipping."
        fi
        echo "Cleanup complete."
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.BUILD_ARTIFACT_NAME }}
          path: ${{ env.BUILD_OUTPUT_PATH }}/${{ matrix.targetPlatform }}
  # Add the GitHub Pages deployment jobs here
  deploy_to_pages:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: unity_build
    if: always()
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./downloads
      - name: List downloaded artifacts
        run: |
          echo "Artifacts downloaded:"
          ls -R ./downloads
      - name: Find WebGL build folder
        id: find_webgl
        run: |
          WEBGL_PATH=$(find ./downloads -type d -name "WebGL" | head -n 1)
          if [ -z "$WEBGL_PATH" ]; then
            echo "No WebGL build found."
            exit 1
          fi
          echo "Found WebGL build at: $WEBGL_PATH"
          echo "WEBGL_PATH=$WEBGL_PATH" >> $GITHUB_ENV
      - name: Zip platform builds
        run: |
          mkdir -p "$WEBGL_PATH/TemplateData/OtherBuilds"
          for dir in ./downloads/*; do
            if [ -d "$dir" ] && [[ "$dir" != *"WebGL"* ]]; then
              zipname="$(basename "$dir").zip"
              zip -r "$WEBGL_PATH/TemplateData/OtherBuilds/$zipname" "$dir"
            fi
          done
        env:
          WEBGL_PATH: ${{ env.WEBGL_PATH }}
      - name: Generate builds.json manifest
        run: |
          echo "[" > "$WEBGL_PATH/TemplateData/OtherBuilds/builds.json"
          for file in "$WEBGL_PATH/TemplateData/OtherBuilds/"*.zip; do
            name=$(basename "$file")
            echo "  \"${name}\"," >> "$WEBGL_PATH/TemplateData/OtherBuilds/builds.json"
          done
          sed -i '$ s/,$//' "$WEBGL_PATH/TemplateData/OtherBuilds/builds.json"
          echo "]" >> "$WEBGL_PATH/TemplateData/OtherBuilds/builds.json"
      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload combined WebGL artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.WEBGL_PATH }}

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: deploy_to_pages
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4