name: Deploy to GitHub Pages

on:
  workflow_dispatch: {}

env:
  VERSIONING_FILE_PATH: "unity-version.txt"
  BUILD_OUTPUT_PATH: build
  RELEASE_NAME: AutoBattler

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  unity_build:
    name: Web Build and deployment
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
        - targetPlatform: StandaloneWindows64
          butlerChannel: windows
        - targetPlatform: WebGL
          butlerChannel: html5

    outputs:
      unityVersion: ${{ steps.version_output.outputs.unityVersion }}
      buildArtifact: ${{ steps.artifact_output.outputs.buildArtifactName }}

    steps:
      # ... (your existing build steps remain the same)
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Get Unity Version
        uses: Appegy/unity-version-action@v1

      - name: Setting Artifact name env variable
        run: echo "BUILD_ARTIFACT_NAME=${{ env.RELEASE_NAME }}-${{ matrix.targetPlatform }}-${{ env.UNITY_VERSION }}.$GITHUB_RUN_NUMBER" >> $GITHUB_ENV
        
      - name: Set job outputs
        id: artifact_output
        run: echo "::set-output name=buildArtifactName::${{ env.BUILD_ARTIFACT_NAME }}"

      - name: Building game
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          buildsPath: ${{ env.BUILD_OUTPUT_PATH}}
          buildName: ${{ env.BUILD_NAME}}
          unityVersion: ${{ env.UNITY_VERSION }}
          targetPlatform: ${{ matrix.targetPlatform }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.BUILD_ARTIFACT_NAME }}
          path: ${{ env.BUILD_OUTPUT_PATH }}/${{ matrix.targetPlatform }}

  # Add the GitHub Pages deployment jobs here
  deploy_to_pages:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: unity_build
    if: contains(needs.unity_build.outputs.buildArtifact, 'WebGL')
    
    steps:
      - name: Download WebGL build artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.unity_build.outputs.buildArtifact }}
          path: ./webgl-build

      - name: List downloaded files
        run: ls -la ./webgl-build/

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./webgl-build/WebGL

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: deploy_to_pages
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4